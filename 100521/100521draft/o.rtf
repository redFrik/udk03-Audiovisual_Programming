{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs44 \cf2 //buffer - use data as raw waveform\cf3 \
\cf2 //synth - use data as parameters\cf3 \
\cf2 //melodies - data is national hymn or melodies\cf3 \
\cf2 //envelopes - length and shape of sound comes from data\cf3 \
\cf2 //timbre - the 'colour' or sound of the music comes from data\cf3 \
\
a= [0.5, 0.3, 0.1, 0.6, 0.4]\
a.plot\
\
b= a.dup(100).flat	\cf2 //gives us 500 values\cf3 \
b.plot\
\
s.boot;\
c= \cf4 Buffer\cf3 .loadCollection(s, b.normalize(-1, 1));\
c.play;\
\
\
(\
\cf4 SynthDef\cf3 (\cf5 \\bufferplay\cf3 , \{\cf4 |buf, rate= 1|\cf3 \
	\cf4 var\cf3  src= \cf4 PlayBuf\cf3 .ar(1, buf, rate, doneAction:2);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(src));\
\}).memStore;\
)\
\cf4 Synth\cf3 (\cf5 \\bufferplay\cf3 , [\cf5 \\buf\cf3 , c, \cf5 \\rate\cf3 , 1])\
\cf4 Synth\cf3 (\cf5 \\bufferplay\cf3 , [\cf5 \\buf\cf3 , c, \cf5 \\rate\cf3 , 0.5])\
\cf4 Synth\cf3 (\cf5 \\bufferplay\cf3 , [\cf5 \\buf\cf3 , c, \cf5 \\rate\cf3 , 0.25])\
}